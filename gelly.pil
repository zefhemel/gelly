import "ast.pil"
import "parser.pil"
//import "evaluator.pil"
import "rewrite.pil"
import "primitives.pil"

import gel
import gelly::rewrite


void main(Array<String> args) {
  //evalInit();
  String input = null;
  println("Welcome to gelly, type :q to quit.");
  var s = new Strategy(new Map<String, StrategyDef>(), new Map<String, ClosureStrategyDef>(), new Map<String, Term>());
  if(s.evalString(":import \"test.g\"")) {
    println(s.currentTerm.toIndentedString(0));
  } else {
    println("Rewriting failed.");
  }
  /*
  while(input != ":q") {
    print("> ");
    input = readln();
    if(input != ":q") {
      println(new Parser(input).acceptExp().toIndentedString(0));
      //interp.eval(input);
    }
  }
  */
  /*
  println(new Parser("if: 3 == 0").acceptExp().toIndentedString(0));
  println(new Parser("if 3 + if 8").acceptExp().toIndentedString(0));
  println(new Parser("say \"Zef\" to: out").acceptExp().toIndentedString(0));
  println(new Parser("a.b 20 + 8 + 4").acceptExp().toIndentedString(0));
  */
  /*
  var m = new Map<String, Term>();
  println(t.match(matchTerm, m));
  println(m);
  */
}
